env:
  PATH: "$HOME/.cargo/bin:$PATH"
  RUST_VERSION: '1.58.1' # Needs to match FreeBSD/Buildroot version
  AWS_ACCESS_KEY_ID: ENCRYPTED[80d64aed9b8a611c4ced43ac2deec18203afaaaaccfc4ccc3e475c052c6a7ccc7a10aaa882b59139ece25d46f73f4ba9]
  AWS_SECRET_ACCESS_KEY: ENCRYPTED[b9837003fbb7a8cd9dad9fd606a5ef5857119292d4c0f3200e19cc5690893d243554342730471c5fb5aea22d905be97e]

task:
  name: Build (Debian Linux)
  container:
    image: debian:11-slim
    cpu: 4
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock
  install_script:
    - apt-get update && apt-get install -y --no-install-recommends git ca-certificates curl gcc libc6-dev musl-tools
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain ${RUST_VERSION}
    - rustup target add x86_64-unknown-linux-musl
    - mkdir ~/bin
    - curl -L https://releases.wezm.net/upload-to-s3/0.1.10/upload-to-s3-0.1.10-x86_64-unknown-linux-musl.tar.gz | tar xzf - -C ~/bin
  test_script:
    - cargo test
  before_cache_script: rm -rf $HOME/.cargo/registry/index
  publish_script: |
    tag=$(git describe --exact-match HEAD 2>/dev/null || true)
    if [ -n "$tag" ]; then
      cargo build --release --target x86_64-unknown-linux-musl
      tarball="rsdate-${tag}-x86_64-unknown-linux-musl.tar.gz"
      strip target/x86_64-unknown-linux-musl/release/rsdate
      tar zcf "$tarball" -C target/x86_64-unknown-linux-musl/release rsdate
      ~/bin/upload-to-s3 -b releases.wezm.net "$tarball" "rsdate/$tag/$tarball"
    fi

task:
  name: Build (Alpine Linux)
  container:
    image: alpine:3.16
    cpu: 4
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock
  install_script:
    - apk update && apk add curl gcc musl-dev
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain ${RUST_VERSION}
  test_script:
    - cargo test
  before_cache_script: rm -rf $HOME/.cargo/registry/index

task:
  name: Build (FreeBSD)
  freebsd_instance:
    image_family: freebsd-13-1
    cpu: 4
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock
  install_script:
    - pkg install -y git-lite rust
    - fetch -o - https://releases.wezm.net/upload-to-s3/0.1.10/upload-to-s3-0.1.10-amd64-unknown-freebsd.tar.gz | tar xzf - -C /usr/local/bin
  test_script:
    - cargo test
  before_cache_script: rm -rf $HOME/.cargo/registry/index
  publish_script: |
    tag=$(git describe --exact-match HEAD 2>/dev/null || true)
    if [ -n "$tag" ]; then
      cargo build --release
      tarball="rsdate-${tag}-amd64-unknown-freebsd.tar.gz"
      strip target/release/rsdate
      tar zcf "$tarball" -C target/release rsdate
      upload-to-s3 -b releases.wezm.net "$tarball" "rsdate/$tag/$tarball"
    fi

task:
  name: Build (Mac OS)
  osx_instance:
    image: catalina-base
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock
  install_script:
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain ${RUST_VERSION}
    - curl -L https://releases.wezm.net/upload-to-s3/0.1.10/upload-to-s3-0.1.10-x86_64-apple-darwin.tar.gz | tar xzf - -C /usr/local/bin
  test_script:
    - cargo test
  before_cache_script: rm -rf $HOME/.cargo/registry/index
  publish_script: |
    tag=$(git describe --exact-match HEAD 2>/dev/null || true)
    if [ -n "$tag" ]; then
      cargo build --release
      tarball="rsdate-${tag}-x86_64-apple-darwin.tar.gz"
      strip target/release/rsdate
      tar zcf "$tarball" -C target/release rsdate
      upload-to-s3 -b releases.wezm.net "$tarball" "rsdate/$tag/$tarball"
    fi

#task:
#  name: Build (Windows)
#  windows_container:
#    image: cirrusci/windowsservercore:cmake
#    cpu: 4
#  environment:
#    CIRRUS_SHELL: powershell
#  install_script:
#    - Invoke-WebRequest -Uri https://win.rustup.rs/x86_64 -OutFile rustup-init.exe
#    - .\rustup-init -y --profile minimal --default-toolchain $env:RUST_VERSION
#    - Invoke-WebRequest https://releases.wezm.net/upload-to-s3/0.1.10/upload-to-s3-0.1.10-x86_64-pc-windows-msvc.zip -OutFile upload-to-s3.zip
#    - Expand-Archive upload-to-s3.zip -DestinationPath .
#    - git fetch --tags
#  test_script:
#    - ~\.cargo\bin\cargo test
#  publish_script: |
#    try {
#      $tag=$(git describe --exact-match HEAD 2>$null)
#    } catch {
#      $tag=""
#    }
#    if ( $tag.Length -gt 0 ) {
#      ~\.cargo\bin\cargo build --release
#      $tarball="rsdate-$tag-x86_64-pc-windows-msvc.zip"
#      cd target\release
#      strip rsdate.exe
#      Compress-Archive .\rsdate.exe "$tarball"
#      cd ..\..
#      .\upload-to-s3 -b releases.wezm.net "target\release\$tarball" "rsdate/$tag/$tarball"
#    }
